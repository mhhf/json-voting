"use strict";

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var factory = function factory(Pudding) {
  // Inherit from Pudding. The dependency on Babel sucks, but it's
  // the easiest way to extend a Babel-based class. Note that the
  // resulting .js file does not have a dependency on Babel.

  var org = (function (_Pudding) {
    _inherits(org, _Pudding);

    function org() {
      _classCallCheck(this, org);

      _get(Object.getPrototypeOf(org.prototype), "constructor", this).apply(this, arguments);
    }

    return org;
  })(Pudding);

  ;

  // Set up specific data for this class.
  org.abi = [{ "constant": false, "inputs": [{ "name": "_orga", "type": "bytes32" }], "name": "evolve", "outputs": [{ "name": "", "type": "bool" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "_orga", "type": "bytes32" }, { "name": "_candidate", "type": "string" }], "name": "propose", "outputs": [], "type": "function" }, { "constant": true, "inputs": [], "name": "numOrgs", "outputs": [{ "name": "number", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "_orga", "type": "bytes32" }, { "name": "_candidate", "type": "string" }, { "name": "_vote", "type": "uint256" }], "name": "vote", "outputs": [], "type": "function" }, { "constant": true, "inputs": [], "name": "getAll", "outputs": [{ "name": "names", "type": "bytes32[]" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "_orga", "type": "bytes32" }, { "name": "_evolutionSchema", "type": "bytes32" }, { "name": "vote", "type": "uint256" }], "name": "voteEvolution", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "_orga", "type": "bytes32" }, { "name": "_addr", "type": "address" }, { "name": "_value", "type": "uint256" }], "name": "send", "outputs": [], "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "uint256" }], "name": "evolutionSchemasArray", "outputs": [{ "name": "", "type": "bytes32" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "name", "type": "bytes32" }, { "name": "_language", "type": "bytes32" }], "name": "newOrg", "outputs": [{ "name": "", "type": "bool" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "_orga", "type": "bytes32" }, { "name": "_addr", "type": "address" }], "name": "getShares", "outputs": [{ "name": "shares", "type": "uint256" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "_orga", "type": "bytes32" }], "name": "getConsens", "outputs": [{ "name": "_candidate", "type": "string" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "uint256" }], "name": "orgasArray", "outputs": [{ "name": "", "type": "bytes32" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "_orga", "type": "bytes32" }], "name": "getCandidatesLength", "outputs": [{ "name": "numCandidates", "type": "uint256" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "_orga", "type": "bytes32" }], "name": "getConsensIndex", "outputs": [{ "name": "_index", "type": "uint256" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "_orga", "type": "bytes32" }], "name": "info", "outputs": [{ "name": "numOwners", "type": "uint256" }, { "name": "size", "type": "uint256" }, { "name": "numCandidates", "type": "uint256" }, { "name": "language", "type": "bytes32" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "_orga", "type": "bytes32" }, { "name": "_at", "type": "uint256" }], "name": "getCandidateAt", "outputs": [{ "name": "_candidate", "type": "string" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "name", "type": "bytes32" }, { "name": "_L_1", "type": "bytes32" }, { "name": "_L_2", "type": "bytes32" }, { "name": "_migration", "type": "string" }], "name": "newEvolutionSchema", "outputs": [{ "name": "", "type": "bool" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "_orga", "type": "bytes32" }, { "name": "_evolutionSchema", "type": "bytes32" }], "name": "proposeEvolution", "outputs": [{ "name": "", "type": "bool" }], "type": "function" }, { "inputs": [], "type": "constructor" }];
  org.binary = "60606040526112d2806100126000396000f3606060405236156100da5760e060020a600035046301baa96881146100dc578063042e9a43146101d657806315a55fc5146102605780634f5b75c51461026a57806353ed5143146103305780635562abd2146103985780635720e67e146103d457806358a2bcc7146104155780635e1d754b146104525780635ebb58fb14610479578063873ab555146104af57806397e76451146105865780639919ebe9146105c3578063af166b0c146105ec578063b64a097e146106b6578063df86725414610705578063e394527a146107a0578063ee28743214610808575b005b6105da6004356000818152600360205260408120818060018180808080805b60068a015460ff87161015610f645760009450600093505b895460ff85161015610f7657895460018b01906000908c90879081101561000257908252602080832090910154600160a060020a0316825291909152604081205460068c018054919260078e01929091908a9081101561000257908252602080832090910154825291909152604081208c549091908d90889081101561000257906000526020600020900160009054600160a060020a036101009290920a9004168152602081019190915260400160002054029094019360019390930192610113565b60408051602060248035600481810135601f81018590048502860185019096528585526100da9581359591946044949293909201918190840183828082843750949650505050505050600082815260036020819052604090912001805460018101808355909190828015829011610b6c57818360005260206000209182019101610b6c9190610bf8565b6105da6001545b90565b60408051602060248035600481810135601f81018590048502860185019096528585526100da95813595919460449492939092019181908401838280828437509496505093359350505050806003600050600085815260200190815260200160002060005060050160005083604051808280519060200190808383829060006004602084601f0104600302600f01f15090910193845250506040805192839003602090810190932033600160a060020a0316600090815293529091209190915550505050565b61083a60408051602081810183526000825282516001805480840283018401909552848252929390929183018282801561038c57602002820191906000526020600020905b816000505481526020019060010190808311610375575b50505050509050610267565b60043560009081526003602090815260408083206024358452600701825280832033600160a060020a03168452909152902060443590556100da565b6100da600435602435604435600083815260036020908152604080832033600160a060020a03168452600181019092529091205482901015610ea457610002565b6105da60043560028054829081101561000257506000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace015481565b6105da6004356024356000828152600360205260408120600281015482146109755761096e565b6105da6004356024356000828152600360209081526040808320600160a060020a03851684526001019091529020545b92915050565b61088460043560408051602081810183526000808352848152600390915291822090919081908180805b6003840154831015610c7e575060009050805b8354811015610d0257835460018501906000908690849081101561000257908252602080832090910154600160a060020a0316825291909152604090205460038501805460058701919086908110156100025790600052602060002090016000506040518082805460018160011615610100020316600290048015610d435780601f10610d21576101008083540402835291820191610d43565b6105da60043560018054829081101561000257506000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6015481565b600435600090815260036020819052604090912001545b60408051918252519081900360200190f35b6105da6004355b6000818152600360205260408120819081908180805b6003840154831015610dd0575060009050805b8354811015610ddc57835460018501906000908690849081101561000257908252602080832090910154600160a060020a0316825291909152604090205460038501805460058701919086908110156100025790600052602060002090016000506040518082805460018160011615610100020316600290048015610e1d5780601f10610dfb576101008083540402835291820191610e1d565b6004803560009081526003602081905260409091208054918101549281015460029190910154919290604080519485526020850193909352838301919091526060830152519081900360800190f35b610884600435602435604080516020818101835260008083528581526003918290529290922090910180548390811015610002579060005260206000209001600050805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610e985780601f10610e6d57610100808354040283529160200191610e98565b604080516020606435600481810135601f81018490048402850184019095528484526105da94813594602480359560443595608494920191908190840183828082843750949650505050505050600084815260208190526040812080548214610aef57610ae6565b6105da6004356024356000828152600360209081526040808320600401548484529183905282205414610eda576104a9565b60405180806020018281038252838181518152602001915080519060200190602002808383829060006004602084601f0104600302600f01f1509050019250505060405180910390f35b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156108e45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b50505060008581526003602052604081208054339350909190811015610002578181526020808220805473ffffffffffffffffffffffffffffffffffffffff191685179055600160a060020a03939093168152600182810184526040822061271090819055918890526003909352600282015560040184905591505b5092915050565b600180548082018083559091908280158290116109a5578183600052602060002091820191016109a59190610ac7565b505060018054879350909150600019810190811015610002575080547fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf50191909155600085815260036020526040902080549182018082558280158290116108f2578183600052602060002091820191016108f29190610ac7565b505060028054899350909150600019810190811015610002575080547f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acd0191909155600087815260208181526040822088815560018181018990558751918501805481865294849020909591851615610100026000190190941604601f9081018390048401939192880190839010610b3c57805160ff19168380011785555b50610adf9291505b80821115610adb5760008155600101610ac7565b5090565b5050600191505b50949350505050565b6002805460018101808355909190828015829011610a20576000839052610a20907f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace908101908301610ac7565b82800160010185558215610abf579182015b82811115610abf578251826000505591602001919060010190610b4e565b50505060008381526003602081905260409091200180548392506000198101908110156100025790600052602060002090016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610c4857805160ff19168380011785555b50610c78929150610ac7565b50506001015b80821115610adb576000818150805460018160011615610100020316600290046000825580601f10610c2a5750610bf2565b601f016020900490600052602060002090810190610bf29190610ac7565b82800160010185558215610be6579182015b82811115610be6578251826000505591602001919060010190610c5a565b50505050565b60008881526003602081905260409091200180548690811015610002579060005260206000209001600050805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610dbe5780601f10610d9357610100808354040283529160200191610dbe565b85821115610d1557819550855082945084505b600192909201916104d9565b820191906000526020600020905b815481529060010190602001808311610d2f575b5050928352505060405190819003602001902085546000908790859081101561000257908252602080832090910154600160a060020a0316825291909152604090205402909101906001016104ec565b820191906000526020600020905b815481529060010190602001808311610da157829003601f168201915b50939c9b505050505050505050505050565b50929695505050505050565b85821115610def57819550855082945084505b60019290920191610609565b820191906000526020600020905b815481529060010190602001808311610e09575b5050928352505060405190819003602001902085546000908790859081101561000257908252602080832090910154600160a060020a03168252919091526040902054029091019060010161061c565b820191906000526020600020905b815481529060010190602001808311610e7b57829003601f168201915b505050505090506104a9565b600160a060020a038084166000908152600183016020526040808220805486019055339092168152208054839003905550505050565b6000838152600360205260409020600601805460018101808355909190828015829011610f1857600083815260209020610f18918101908301610ac7565b50505060008481526003602052604090206006018054849250600019810190811015610002576000918252602090912001555060016104a9565b50505b50505050505050505050919050565b8860001415610fa15760009a50610f55565b8685118015610f8457508885115b15610f955793975060ff8516965087935b600195909501946100fb565b60068a01805460009182918b908110156100025750905260208082208a0154825281905260409020600181015460048c01559250610fde8c6105f3565b91508960030160005082815481101561000257906000526020600020900160005090505b60038a015460ff871610156110885760ff861682146110db57600093505b895460ff851610156110db5760038a01805460058c019190889081101561000257906000526020600020900160005060405180828054600181600116156101000203166002900480156111095780601f106110e7576101008083540402835291820191611109565b60038a01805460008083559182526020909120611171918101905b80821115610adb576000818150805460018160011615610100020316600290046000825580601f106111a557505b50506001016110a3565b60019590950194611002565b820191906000526020600020905b8154815290600101906020018083116110f5575b505092835250506040519081900360200190208a546000908c908790811015610002579082526020822001819054906101000a9004600160a060020a0316600160a060020a031681526020019081526020016000206000506000905560019390930192611020565b5060038a018054600181018083559091908280158290116111c3578183600052602060002091820191016111c39190611246565b601f0160209004906000526020600020908101906110d19190610ac7565b5050505060038a0180548291906000198101908110156100025790600052602060002090016000509080546001816001161561010002031660029004828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061129657805485555b50610f52929150610ac7565b50506001015b80821115610adb576000818150805460018160011615610100020316600290046000825580601f106112785750611240565b601f0160209004906000526020600020908101906112409190610ac7565b8280016001018555821561123457600052602060002091601f016020900482015b828111156112345782548255916001019190600101906112b756";

  if ("0xc305c901078781c232a2a521c2af7980f8385ee9" != "") {
    org.address = "0xc305c901078781c232a2a521c2af7980f8385ee9";

    // Backward compatibility; Deprecated.
    org.deployed_address = "0xc305c901078781c232a2a521c2af7980f8385ee9";
  }

  org.generated_with = "1.0.2";
  org.contract_name = "org";

  return org;
};

// Nicety for Node.
factory.load = factory;

if (typeof module != "undefined") {
  module.exports = factory;
} else {
  // There will only be one version of Pudding in the browser,
  // and we can use that.
  window.org = factory;
}