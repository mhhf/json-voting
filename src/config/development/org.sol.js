"use strict";

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var factory = function factory(Pudding) {
  // Inherit from Pudding. The dependency on Babel sucks, but it's
  // the easiest way to extend a Babel-based class. Note that the
  // resulting .js file does not have a dependency on Babel.

  var org = (function (_Pudding) {
    _inherits(org, _Pudding);

    function org() {
      _classCallCheck(this, org);

      _get(Object.getPrototypeOf(org.prototype), "constructor", this).apply(this, arguments);
    }

    return org;
  })(Pudding);

  ;

  // Set up specific data for this class.
  org.abi = [{ "constant": false, "inputs": [{ "name": "_orga", "type": "bytes32" }, { "name": "_candidate", "type": "string" }], "name": "propose", "outputs": [], "type": "function" }, { "constant": true, "inputs": [], "name": "numOrgs", "outputs": [{ "name": "number", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "_orga", "type": "bytes32" }, { "name": "_candidate", "type": "string" }, { "name": "_vote", "type": "uint256" }], "name": "vote", "outputs": [], "type": "function" }, { "constant": true, "inputs": [], "name": "getAll", "outputs": [{ "name": "names", "type": "bytes32[]" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "_orga", "type": "bytes32" }, { "name": "_addr", "type": "address" }, { "name": "_value", "type": "uint256" }], "name": "send", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "name", "type": "bytes32" }, { "name": "_language", "type": "bytes32" }], "name": "newOrg", "outputs": [{ "name": "", "type": "bool" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "_orga", "type": "bytes32" }, { "name": "_addr", "type": "address" }], "name": "getShares", "outputs": [{ "name": "shares", "type": "uint256" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "_orga", "type": "bytes32" }], "name": "getConsens", "outputs": [{ "name": "_candidate", "type": "string" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "uint256" }], "name": "orgasArray", "outputs": [{ "name": "", "type": "bytes32" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "_orga", "type": "bytes32" }], "name": "getCandidatesLength", "outputs": [{ "name": "numCandidates", "type": "uint256" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "_orga", "type": "bytes32" }], "name": "info", "outputs": [{ "name": "numOwners", "type": "uint256" }, { "name": "size", "type": "uint256" }, { "name": "numCandidates", "type": "uint256" }, { "name": "language", "type": "bytes32" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "_orga", "type": "bytes32" }, { "name": "_at", "type": "uint256" }], "name": "getCandidateAt", "outputs": [{ "name": "_candidate", "type": "string" }], "type": "function" }, { "inputs": [], "type": "constructor" }];
  org.binary = "60606040526109fb806100126000396000f3606060405236156100985760e060020a6000350463042e9a43811461009a57806315a55fc5146101225780634f5b75c51461012c57806353ed5143146101f25780635720e67e146102575780635e1d754b146102975780635ebb58fb146102be578063873ab555146102f357806397e76451146103d15780639919ebe91461040d578063b64a097e14610435578063df86725414610481575b005b60408051602060248035600481810135601f810185900485028601850190965285855261009895813595919460449492939092019181908401838280828437509496505050505050506000828152600160208190526040909120600301805491820180825582801582901161074d5781836000526020600020918201910161074d91906107d8565b6104236000545b90565b60408051602060248035600481810135601f810185900485028601850190965285855261009895813595919460449492939092019181908401838280828437509496505093359350505050806001600050600085815260200190815260200160002060005060050160005083604051808280519060200190808383829060006004602084601f0104600302600f01f15090910193845250506040805192839003602090810190932033600160a060020a0316600090815293529091209190915550505050565b60408051602081810183526000808352835181548084028201840190955284815261051b94909283018282801561024b57602002820191906000526020600020905b816000505481526020019060010190808311610234575b50505050509050610129565b610098600435602435604435600083815260016020818152604080842033600160a060020a0316855292830190915290912054829010156109c557610002565b61042360043560243560008281526001602052604081206002810154821461065957610652565b6104236004356024356000828152600160208181526040808420600160a060020a038616855290920190529020545b92915050565b61056560043560408051602081810183526000808352848152600190915291822090919081908180805b600384015460ff84161015610840575060009050805b835460ff821610156108bf5783546001850190600090869084908110156100025790825260208083209190910154600160a060020a03168252919091526040902054600385018054600587019190869081101561000257906000526020600020900160005060405180828054600181600116156101000203166002900480156109015780601f106108df576101008083540402835291820191610901565b610423600435600080548290811015610002575080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563015481565b6004356000908152600160205260409020600301545b60408051918252519081900360200190f35b6004803560009081526001602052604090208054600382015460028301549290930154909290604080519485526020850193909352838301919091526060830152519081900360800190f35b6105656004356024356040805160208181018352600080835285815260019091529190912060030180548390811015610002579060005260206000209001600050805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109b95780601f1061098e576101008083540402835291602001916109b9565b60405180806020018281038252838181518152602001915080519060200190602002808383829060006004602084601f0104600302600f01f1509050019250505060405180910390f35b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156105c55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b505050600085815260016020526040812080543393509091908110156100025760408082209282526020808320805473ffffffffffffffffffffffffffffffffffffffff191686179055600160a060020a0394909416825260018381018552908220612710908190559188905292839052600282015560040184905591505b5092915050565b60008054600181018083559091908280158290116106a4578280526106a4907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563908101908301610735565b505060008054879350909150600019810190811015610002577f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563019190915584815260016020819052604090912080549182018082558280158290116105d3576000838152602090206105d3918101908301610735565b601f0160209004906000526020600020908101906107d291905b808211156107495760008155600101610735565b5090565b505050600083815260016020526040902060030180548392506000198101908110156100025790600052602060002090016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061080a57805160ff19168380011785555b5061083a929150610735565b50506001015b80821115610749576000818150805460018160011615610100020316600290046000825580601f1061071b57506107d2565b828001600101855582156107c6579182015b828111156107c657825182600050559160200191906001019061081c565b50505050565b6000888152600160205260409020600301805486908110156100025760009182526020918290200180546040805160026001841615610100026000190190931692909204601f8101859004850283018501909152808252909283018282801561097c5780601f106109515761010080835404028352916020019161097c565b858211156108d35790945060ff8216935084905b6001929092019161031d565b820191906000526020600020905b8154815290600101906020018083116108ed575b5050928352505060405190819003602001902085546000908790859081101561000257908252602080832090910154600160a060020a031682529190915260409020540290910190600101610333565b820191906000526020600020905b81548152906001019060200180831161095f57829003601f168201915b50939c9b505050505050505050505050565b820191906000526020600020905b81548152906001019060200180831161099c57829003601f168201915b505050505090506102ed565b600160a060020a03838116600090815260018301602052604080822080548601905533909216815220805483900390555050505056";

  if ("0x2993f0c1211287ddfb8bab23ea645a2a752aa081" != "") {
    org.address = "0x2993f0c1211287ddfb8bab23ea645a2a752aa081";

    // Backward compatibility; Deprecated.
    org.deployed_address = "0x2993f0c1211287ddfb8bab23ea645a2a752aa081";
  }

  org.generated_with = "1.0.2";
  org.contract_name = "org";

  return org;
};

// Nicety for Node.
factory.load = factory;

if (typeof module != "undefined") {
  module.exports = factory;
} else {
  // There will only be one version of Pudding in the browser,
  // and we can use that.
  window.org = factory;
}