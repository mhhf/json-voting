"use strict";

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var factory = function factory(Pudding) {
  // Inherit from Pudding. The dependency on Babel sucks, but it's
  // the easiest way to extend a Babel-based class. Note that the
  // resulting .js file does not have a dependency on Babel.

  var org = (function (_Pudding) {
    _inherits(org, _Pudding);

    function org() {
      _classCallCheck(this, org);

      _get(Object.getPrototypeOf(org.prototype), "constructor", this).apply(this, arguments);
    }

    return org;
  })(Pudding);

  ;

  // Set up specific data for this class.
  org.abi = [{ "constant": false, "inputs": [{ "name": "_orga", "type": "bytes32" }, { "name": "_candidate", "type": "string" }], "name": "propose", "outputs": [], "type": "function" }, { "constant": true, "inputs": [], "name": "numOrgs", "outputs": [{ "name": "number", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "_orga", "type": "bytes32" }, { "name": "_candidate", "type": "string" }, { "name": "_vote", "type": "uint256" }], "name": "vote", "outputs": [], "type": "function" }, { "constant": true, "inputs": [], "name": "getAll", "outputs": [{ "name": "names", "type": "bytes32[]" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "_orga", "type": "bytes32" }, { "name": "_addr", "type": "address" }, { "name": "_value", "type": "uint256" }], "name": "send", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "name", "type": "bytes32" }, { "name": "_language", "type": "bytes32" }], "name": "newOrg", "outputs": [{ "name": "", "type": "bool" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "_orga", "type": "bytes32" }], "name": "getConsens", "outputs": [{ "name": "_candidate", "type": "string" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "uint256" }], "name": "orgasArray", "outputs": [{ "name": "", "type": "bytes32" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "_orga", "type": "bytes32" }], "name": "getCandidatesLength", "outputs": [{ "name": "numCandidates", "type": "uint256" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "_orga", "type": "bytes32" }], "name": "info", "outputs": [{ "name": "numOwners", "type": "uint256" }, { "name": "size", "type": "uint256" }, { "name": "numCandidates", "type": "uint256" }, { "name": "language", "type": "bytes32" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "_orga", "type": "bytes32" }, { "name": "_at", "type": "uint256" }], "name": "getCandidateAt", "outputs": [{ "name": "_candidate", "type": "string" }], "type": "function" }, { "inputs": [], "type": "constructor" }];
  org.binary = "60606040526109bc806100126000396000f36060604052361561008d5760e060020a6000350463042e9a43811461008f57806315a55fc5146101175780634f5b75c51461012157806353ed5143146101e75780635720e67e1461024c5780635e1d754b1461028c578063873ab555146102b357806397e76451146103915780639919ebe9146103cd578063b64a097e146103f5578063df86725414610441575b005b60408051602060248035600481810135601f810185900485028601850190965285855261008d95813595919460449492939092019181908401838280828437509496505050505050506000828152600160208190526040909120600301805491820180825582801582901161070d5781836000526020600020918201910161070d9190610798565b6103e36000545b90565b60408051602060248035600481810135601f810185900485028601850190965285855261008d95813595919460449492939092019181908401838280828437509496505093359350505050806001600050600085815260200190815260200160002060005060050160005083604051808280519060200190808383829060006004602084601f0104600302600f01f15090910193845250506040805192839003602090810190932033600160a060020a0316600090815293529091209190915550505050565b6040805160208181018352600080835283518154808402820184019095528481526104db94909283018282801561024057602002820191906000526020600020905b816000505481526020019060010190808311610229575b5050505050905061011e565b61008d600435602435604435600083815260016020818152604080842033600160a060020a03168552928301909152909120548290101561098657610002565b6103e360043560243560008281526001602052604081206002810154821461061957610612565b61052560043560408051602081810183526000808352848152600190915291822090919081908180805b600384015460ff84161015610800575060009050805b835460ff8216101561087f5783546001850190600090869084908110156100025790825260208083209190910154600160a060020a03168252919091526040902054600385018054600587019190869081101561000257906000526020600020900160005060405180828054600181600116156101000203166002900480156108c15780601f1061089f5761010080835404028352918201916108c1565b6103e3600435600080548290811015610002575080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563015481565b6004356000908152600160205260409020600301545b60408051918252519081900360200190f35b6004803560009081526001602052604090208054600382015460028301549290930154909290604080519485526020850193909352838301919091526060830152519081900360800190f35b6105256004356024356040805160208181018352600080835285815260019091529190912060030180548390811015610002579060005260206000209001600050805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109795780601f1061094e57610100808354040283529160200191610979565b60405180806020018281038252838181518152602001915080519060200190602002808383829060006004602084601f0104600302600f01f1509050019250505060405180910390f35b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156105855780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b505050600085815260016020526040812080543393509091908110156100025760408082209282526020808320805473ffffffffffffffffffffffffffffffffffffffff191686179055600160a060020a0394909416825260018381018552908220612710908190559188905292839052600282015560040184905591505b5092915050565b600080546001810180835590919082801582901161066457828052610664907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639081019083016106f5565b505060008054879350909150600019810190811015610002577f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301919091558481526001602081905260409091208054918201808255828015829011610593576000838152602090206105939181019083016106f5565b601f01602090049060005260206000209081019061079291905b8082111561070957600081556001016106f5565b5090565b505050600083815260016020526040902060030180548392506000198101908110156100025790600052602060002090016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106107ca57805160ff19168380011785555b506107fa9291506106f5565b50506001015b80821115610709576000818150805460018160011615610100020316600290046000825580601f106106db5750610792565b82800160010185558215610786579182015b828111156107865782518260005055916020019190600101906107dc565b50505050565b6000888152600160205260409020600301805486908110156100025760009182526020918290200180546040805160026001841615610100026000190190931692909204601f8101859004850283018501909152808252909283018282801561093c5780601f106109115761010080835404028352916020019161093c565b858211156108935790945060ff8216935084905b600192909201916102dd565b820191906000526020600020905b8154815290600101906020018083116108ad575b5050928352505060405190819003602001902085546000908790859081101561000257908252602080832090910154600160a060020a0316825291909152604090205402909101906001016102f3565b820191906000526020600020905b81548152906001019060200180831161091f57829003601f168201915b50939c9b505050505050505050505050565b820191906000526020600020905b81548152906001019060200180831161095c57829003601f168201915b5050505050905092915050565b600160a060020a03838116600090815260018301602052604080822080548601905533909216815220805483900390555050505056";

  if ("0x6bf68d0470d58001ca16f7b86f8c21d075f18bda" != "") {
    org.address = "0x6bf68d0470d58001ca16f7b86f8c21d075f18bda";

    // Backward compatibility; Deprecated.
    org.deployed_address = "0x6bf68d0470d58001ca16f7b86f8c21d075f18bda";
  }

  org.generated_with = "1.0.2";
  org.contract_name = "org";

  return org;
};

// Nicety for Node.
factory.load = factory;

if (typeof module != "undefined") {
  module.exports = factory;
} else {
  // There will only be one version of Pudding in the browser,
  // and we can use that.
  window.org = factory;
}