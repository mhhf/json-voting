import "dapple/test.sol";
import "reg.sol";

contract RegTest is Test {

  /* function testSetUp(){ */
  /*   bytes memory lang = new bytes(6); */
  /*   lang[0] = byte(0x01); */
  /*   lang[1] = byte(0x61); */
  /*   lang[2] = byte(0x01); */
  /*   lang[3] = byte(0x01); */
  /*   lang[4] = byte(0x61); */
  /*   lang[5] = byte(0xff); */
  /*   Reg reg = new Reg(); */
  /*   reg.fromNormalForm(lang); */
  /* } */
  /*  */
  /* function testValideWord(){ */
  /*   bytes memory lang = new bytes(6); */
  /*   lang[0] = byte(0x01); */
  /*   lang[1] = byte(0x61); */
  /*   lang[2] = byte(0x01); */
  /*   lang[3] = byte(0x01); */
  /*   lang[4] = byte(0x00); */
  /*   lang[5] = byte(0xff); */
  /*   Reg reg = new Reg(); */
  /*   reg.fromNormalForm(lang); */
  /*   assertTrue(reg.validate("")); */
  /*   assertTrue(reg.validate("a")); */
  /*   assertTrue(reg.validate("aa")); */
  /*   assertTrue(reg.validate("aaaaaa")); */
  /* } */
  /*  */
  /* function testValidWordForFixGrammer(){ */
  /*   bytes memory lang = new bytes(6); */
  /*   lang[0] = byte(0x01); */
  /*   lang[1] = byte(0x61); */
  /*   lang[2] = byte(0x02); */
  /*   lang[3] = byte(0x02); */
  /*   lang[4] = byte(0x61); */
  /*   lang[5] = byte(0xff); */
  /*   Reg reg = new Reg(); */
  /*   reg.fromNormalForm(lang); */
  /*   assertTrue(reg.validate("aa")); */
  /*   assertFalse(reg.validate("a")); */
  /*   assertFalse(reg.validate("aaa")); */
  /* } */
  /*  */
  /* function testInvalideWord(){ */
  /*   bytes memory lang = new bytes(6); */
  /*   lang[0] = byte(0x01); */
  /*   lang[1] = byte(0x61); */
  /*   lang[2] = byte(0x01); */
  /*   lang[3] = byte(0x01); */
  /*   lang[4] = byte(0x00); */
  /*   lang[5] = byte(0xff); */
  /*   Reg reg = new Reg(); */
  /*   reg.fromNormalForm(lang); */
  /*   assertFalse(reg.validate("b")); */
  /*   assertFalse(reg.validate("ab")); */
  /*   assertFalse(reg.validate("a a")); */
  /* } */

  function testRegExFormat(){
    Reg reg = new Reg();
    /* reg.fromRegEx("a"); */
    /* reg.fromRegEx("aa"); */
    /* reg.fromRegEx("ab"); */
    reg.fromRegEx("a|b*");
    assertTrue(reg.validate("b"));
    /* reg.fromRegEx("a|b"); */
    /* reg.fromRegEx("a(c)b"); */
    /* reg.fromRegEx("(c)b"); */
    /* reg.fromRegEx("a(c)"); */
    /* reg.fromRegEx("a(c)*"); */
  }

  /* function testRegex2(){ */
  /*   Reg reg = new Reg(); */
  /*   reg.fromRegEx("ab"); */
  /*   assertTrue(reg.validate("ab")); */
  /*   assertFalse(reg.validate("a")); */
  /*   assertFalse(reg.validate("b")); */
  /*   assertFalse(reg.validate("abb")); */
  /*   assertFalse(reg.validate("aab")); */
  /* } */
  /*  */
  /* function testRegex3(){ */
  /*   Reg reg = new Reg(); */
  /*   reg.fromRegEx("a()"); */
  /*   assertTrue(reg.validate("a")); */
  /*   assertFalse(reg.validate("aa")); */
  /*   assertFalse(reg.validate("")); */
  /* } */
  /*  */
  /* function testRegex4(){ */
  /*   Reg reg = new Reg(); */
  /*   reg.fromRegEx("()a"); */
  /*   assertTrue(reg.validate("a")); */
  /*   assertFalse(reg.validate("aa")); */
  /*   assertFalse(reg.validate("")); */
  /* } */
  /*  */
  /* function testRegex5(){ */
  /*   Reg reg = new Reg(); */
  /*   reg.fromRegEx("a()b"); */
  /*   assertTrue(reg.validate("ab")); */
  /*   assertFalse(reg.validate("aab")); */
  /*   assertFalse(reg.validate("")); */
  /* } */
  /*  */
  /* function testRegex6(){ */
  /*   Reg reg = new Reg(); */
  /*   reg.fromRegEx("(())a"); */
  /*   assertTrue(reg.validate("a")); */
  /*   assertFalse(reg.validate("aa")); */
  /*   assertFalse(reg.validate("")); */
  /* } */
  /*  */
  /* function testRegex7(){ */
  /*   Reg reg = new Reg(); */
  /*   reg.fromRegEx("((a))"); */
  /*   assertTrue(reg.validate("a")); */
  /*   assertFalse(reg.validate("aa")); */
  /*   assertFalse(reg.validate("")); */
  /* } */

  /* function testRegex8(){ */
  /*   Reg reg = new Reg(); */
  /*   reg.fromRegEx("a*"); */
  /*   assertTrue(reg.validate("")); */
  /*   assertTrue(reg.validate("a")); */
  /*   assertTrue(reg.validate("aa")); */
  /* } */
  /*  */
  /* function testRegex9(){ */
  /*   Reg reg = new Reg(); */
  /*   reg.fromRegEx("ab*"); */
  /*   assertTrue(reg.validate("a")); */
  /*   assertTrue(reg.validate("ab")); */
  /*   assertTrue(reg.validate("abb")); */
  /* } */
  /*  */
  /* function testRegex10(){ */
  /*   Reg reg = new Reg(); */
  /*   reg.fromRegEx("a|b"); */
  /*   assertTrue(reg.validate("a")); */
  /*   assertTrue(reg.validate("b")); */
  /* } */

}
